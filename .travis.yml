sudo: required
dist: bionic
cache: ccache
language: cpp
compiler:
- clang
- gcc
env:
- SCALAR_DOUBLE=ON
- SCALAR_DOUBLE=OFF
install:
- sudo apt-get update -qq
- sudo apt-get install -qy cmake
  libqt5svg5-dev libqt5opengl5-dev qt5-default qttools5-dev qttools5-dev-tools libqt5websockets5-dev
  libtbb-dev
  libavcodec-dev libavformat-dev libavutil-dev libswscale-dev
  libboost-program-options-dev libboost-thread-dev
  libeigen3-dev
  libcgal-dev libcgal-qt5-dev libgdal-dev libpcl-dev
  libdlib-dev libproj-dev libxerces-c-dev xvfb libpdal-dev libjsoncpp-dev
- git submodule init && git submodule update

before_script:
- mkdir build
- cd build
- cmake -DCMAKE_BUILD_TYPE=Release
  -DEIGEN_ROOT_DIR=/usr/include/eigen3
  -DJSON_ROOT_DIR=/usr/include/jsoncpp
  -DDLIB_ROOT=/usr/include
  -DCCCORELIB_SCALAR_DOUBLE=$SCALAR_DOUBLE
  -DCCCORELIB_USE_TBB=ON
  -DPLUGIN_EXAMPLE_GL=ON
  -DPLUGIN_EXAMPLE_IO=ON
  -DPLUGIN_EXAMPLE_STANDARD=ON
  -DPLUGIN_GL_QEDL=ON
  -DPLUGIN_GL_QSSAO=ON
  -DPLUGIN_IO_QADDITIONAL=ON
  -DPLUGIN_IO_QCORE=ON
  -DPLUGIN_IO_QE57=ON
  -DPLUGIN_IO_QPHOTOSCAN=ON
  -DPLUGIN_IO_QPDAL=ON
  -DPLUGIN_IO_QRDB=ON
  -DPLUGIN_IO_QRDB_FETCH_DEPENDENCY=ON
  -DPLUGIN_IO_QRDB_INSTALL_DEPENDENCY=ON
  -DPLUGIN_STANDARD_QANIMATION=ON
  -DQANIMATION_WITH_FFMPEG_SUPPORT=ON
  -DPLUGIN_STANDARD_QBROOM=ON
  -DPLUGIN_STANDARD_QCANUPO=ON
  -DPLUGIN_STANDARD_QCOMPASS=ON
  -DPLUGIN_STANDARD_QCSF=ON
  -DPLUGIN_STANDARD_QFACETS=ON
  -DPLUGIN_STANDARD_QHOUGH_NORMALS=ON
  -DPLUGIN_STANDARD_QHPR=ON
  -DPLUGIN_STANDARD_QM3C2=ON
  -DPLUGIN_STANDARD_QPCV=ON
  -DPLUGIN_STANDARD_QPOISSON_RECON=ON
  -DPLUGIN_STANDARD_QSRA=ON
  -DPLUGIN_STANDARD_QRANSAC_SD=ON
  -DPLUGIN_STANDARD_QPCL=ON
  -DBUILD_TESTING=ON
  ..
script:
- if [[ $CXX == "clang++" ]]; then export LD_LIBRARY_PATH=/usr/local/clang/lib:$LD_LIBRARY_PATH; fi
- if [[ $TRAVIS_BRANCH != "beta_builds" ]]; then make -j2 && if [[ $SCALAR_DOUBLE != "ON" ]]; then xvfb-run ctest -V; fi; fi
- cd ..
after_success:
- openssl aes-256-cbc -K $encrypted_d04fcf964026_key -iv $encrypted_d04fcf964026_iv
  -in .snapcraft/travis_snapcraft.cfg -out .snapcraft/snapcraft.cfg -d
services:
- docker
deploy:
  on:
    branch: beta_builds
    condition: "$CC = gcc"
  provider: script
  script: scripts/linux/snap_deploy.sh $(pwd)
  skip_cleanup: true
