name: Build

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.config.name }} SCALAR_DOUBLE=${{ matrix.scalar_double }}
    runs-on: ${{ matrix.config.os }}
    if: "!contains(github.event.head_commit.message, '[skip ci]')"

    strategy:
      fail-fast: false
      matrix:
        scalar_double: ["OFF", "ON"]
        config:
          - {
              name: "Windows MSVC",
              os: windows-latest,
              generator: "Ninja",
              conda_library_dir: "Library",
              compile_qanimation_with_ffmpeg: "ON",
              compile_qpcl: "ON",
              compile_qransac: "ON",
            }
          - {
              name: "macOS Clang",
              os: macos-latest,
              generator: "Ninja",
              conda_library_dir: ".",
              compile_qanimation_with_ffmpeg: "OFF",
              compile_qpcl: "OFF",
              compile_qransac: "ON",
            }

    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          submodules: true

      # Turn off for now since GitHub Actions is broken (will eventually move to brew anyways)
      # - name: Conda Cache (macOS)
      #   if:  matrix.config.os == 'macos-latest'
      #   uses: actions/cache@v1
      #   with:
      #     path: /Users/runner/miniconda3/envs/CloudCompareDev
      #     key: conda-cache-${{ runner.os }}-${{ hashFiles('.ci/conda.yml') }}

      - name: Conda Cache (Windows)
        if:  matrix.config.os == 'windows-latest'
        uses: actions/cache@v1
        with:
          path: C:\Miniconda3\envs\CloudCompareDev
          key: conda-cache-${{ runner.os }}-${{ hashFiles('.ci/conda.yml') }}

      - name: Install Dependencies
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: CloudCompareDev
          auto-activate-base: false
          environment-file: .ci/conda.yml
          miniconda-version: 'latest'

      - name: Install Dependencies (macOS)
        if: matrix.config.os == 'macos-latest'
        run: brew install xerces-c

      - name: Configure MSVC console (Windows)
        if:  matrix.config.os == 'windows-latest'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Set environment for MSVC (Windows)
        if:  matrix.config.os == 'windows-latest'
        run: |
          # Set these env vars so cmake picks the correct compiler
          # https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-commands-for-github-actions#environment-files
          echo "CXX=cl.exe" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "CC=cl.exe" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Configure CMake
        shell: bash -l {0}
        run: |
          mkdir build

          export CONDA_LIB_DIR="$CONDA_PREFIX/${{ matrix.config.conda_library_dir }}"
          export EIGEN_ROOT_DIR="$CONDA_LIB_DIR/include/eigen3"

          cmake \
            -B build \
            -G "${{ matrix.config.generator }}" \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_PREFIX_PATH="$CONDA_LIB_DIR" \
            -DCCCORELIB_SCALAR_DOUBLE=${{ matrix.scalar_double }} \
            -DEIGEN_ROOT_DIR="$EIGEN_ROOT_DIR" \
            -DOPTION_SUPPORT_GAMEPADS=ON \
            -DPLUGIN_EXAMPLE_GL=ON \
            -DPLUGIN_EXAMPLE_IO=ON \
            -DPLUGIN_EXAMPLE_STANDARD=ON \
            -DPLUGIN_GL_QEDL=ON \
            -DPLUGIN_GL_QSSAO=ON \
            -DPLUGIN_IO_QADDITIONAL=ON \
            -DPLUGIN_IO_QCORE=ON \
            -DPLUGIN_IO_QE57=ON \
            -DPLUGIN_IO_QPHOTOSCAN=ON \
            -DPLUGIN_IO_QPDAL=ON \
            -DPLUGIN_IO_QRDB=ON \
            -DPLUGIN_IO_QRDB_FETCH_DEPENDENCY=ON \
            -DPLUGIN_IO_QRDB_INSTALL_DEPENDENCY=ON \
            -DPLUGIN_STANDARD_QANIMATION=ON \
            -DQANIMATION_WITH_FFMPEG_SUPPORT=${{ matrix.config.compile_qanimation_with_ffmpeg }} \
            -DPLUGIN_STANDARD_QBROOM=ON \
            -DPLUGIN_STANDARD_QCANUPO=OFF \
            -DPLUGIN_STANDARD_QCOMPASS=ON \
            -DPLUGIN_STANDARD_QCSF=ON \
            -DPLUGIN_STANDARD_QFACETS=ON \
            -DPLUGIN_STANDARD_QHOUGH_NORMALS=ON \
            -DPLUGIN_STANDARD_QHPR=ON \
            -DPLUGIN_STANDARD_QM3C2=ON \
            -DPLUGIN_STANDARD_QPCV=ON \
            -DPLUGIN_STANDARD_QPOISSON_RECON=ON \
            -DPLUGIN_STANDARD_QSRA=ON \
            -DPLUGIN_STANDARD_QRANSAC_SD=${{ matrix.config.compile_qransac }} \
            -DPLUGIN_STANDARD_QPCL=${{ matrix.config.compile_qpcl }} \
            .

      - name: Build
        run: |
          cmake --build build
